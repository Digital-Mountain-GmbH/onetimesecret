##
# Pre-Commit Configuration
#
# Initial setup:
#
#   0. Install the pre-commit framework (if it isn't already on your system):
#
#         $ pip install pre-commit
#
#   1. Install the git hook:
#
#         $ pre-commit install
#
#
# Other commands:
#
#   Run it on all the files in this repo:
#     $ pre-commit run --all-files
#
#   Updating plugin repositories:
#     $ pre-commit autoupdate
#
#   Automatically enable pre-commit on repositories
#     $ git config --global init.templateDir ~/.git-template
#     $ pre-commit init-templatedir ~/.git-template
#
# See also:
#   - https://pre-commit.com for more information
#   - https://pre-commit.com/hooks.html for more hooks
#

default_install_hook_types:
  - pre-commit
  - prepare-commit-msg
  - post-commit
  - post-checkout
  - post-merge

default_stages: [pre-commit]

fail_fast: true

# Skip generated/dependency directories
exclude: '^(vendor|node_modules|dist|build)/'

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Fast, essential checks only
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: ["--maxkb=2500"]
      - id: no-commit-to-branch
        args: ["--branch", "develop", "--branch", "rel/.*"]

  # Originally based on Rubocop's own pre-commit configuration
  # https://github.com/rubocop/rubocop/blob/d5d8828/.pre-commit-hooks.yaml
  # NOTE: Don't enable '--autocorrect' until codebase is clean
  # Use Rubocop local hooks for better performance
  # Fast local Rubocop checks (basic syntax)
  - repo: local
    hooks:
      - id: local-rubocop-fast
        stages: [pre-commit]
        name: Quick Rubocop
        entry: bundle exec rubocop --force-exclusion --config .rubocop.yml --format json --fail-level error --only Syntax,Layout --no-server
        language: system
        types: [ruby]
        files: \.(rb|rake)$
        pass_filenames: true

  - repo: https://github.com/avilaton/add-msg-issue-prefix-hook
    rev: v0.0.11
    hooks:
      - id: add-msg-issue-prefix
        stages: [prepare-commit-msg]
        args:
          - "--default=[UNTRACKED]"
          - "--pattern=[a-zA-Z0-9]{0,10}-?[0-9]{1,5}"
          - "--template=[#{}]"

  # Quick local ESLint checks (syntax only)
  - repo: local
    hooks:
      - id: local-eslint-fast
        stages: [pre-commit]
        name: Quick ESLint
        entry: node_modules/.bin/eslint --quiet --flag unstable_ts_config
        language: system
        pass_filenames: true
        files: (^src/.*\.(mjs|ts|vue)$|^.*\.(mjs|ts|vue)$)

  # Quick TypeScript type checking
  - repo: local
    hooks:
      - id: typescript-check-full
        stages: [push]
        name: TypeScript Type Check
        entry: pnpm run type-check
        language: system
        pass_filenames: true
        types: [file]
        files: ^src/.*\.(ts|tsx|vue)$

  - repo: local
    hooks:
      - id: register-build
        stages: [post-commit, post-checkout, post-merge]
        name: Record commit hash
        entry: "sh -c 'git rev-parse --short HEAD > .commit_hash.txt; echo Commit hash recorded; head -4 .commit_hash.txt package.json'"
        language: system
        always_run: true
        pass_filenames: false

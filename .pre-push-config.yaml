##
# Pre-Push Configuration
#
# This configuration runs more thorough checks before pushing code to remote.
# These checks are intentionally separated from pre-commit to keep commits fast
# while ensuring code quality before sharing.
#
# Initial setup:
#
#   1. Install the pre-push hook:
#
#         $ pre-commit install --hook-type pre-push
#
#   2. Ensure all dependencies are installed:
#         - Ruby/Rubocop (for Ruby checks)
#         - Node/ESLint (for JS/TS checks)
#         - TypeScript (for type checking)
#
# Usage:
#
#   The hooks will run automatically on 'git push'
#
#   To run manually:
#     $ pre-commit run --config .pre-push-config.yaml --all-files
#
#   To run specific hooks:
#     $ pre-commit run check-yaml --config .pre-push-config.yaml
#     $ pre-commit run local-rubocop-full --config .pre-push-config.yaml
#
# This config includes:
#   - Full linting (Rubocop, ESLint)
#   - Config file validation (YAML, JSON, TOML)
#   - TypeScript type checking
#   - Code style and format checks
#   - Security checks
#
# See also:
#   - .pre-commit-config.yaml for faster commit-time checks
#   - https://pre-commit.com for more information
#   - https://pre-commit.com/hooks.html for more hooks
#

fail_fast: true

# Skip generated/dependency directories
exclude: '^(vendor|node_modules|dist|build)/'

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-yaml
        name: Validate YAML files
        args: ["--allow-multiple-documents"]
        files: \.(yaml|yml)$
        stages: [push]  # Specify stages per hook instead

      - id: check-toml
        name: Validate TOML files
        files: \.toml$
        stages: [push]

      - id: check-json
        name: Validate JSON files
        files: \.json$
        stages: [push]

      - id: pretty-format-json
        name: Format JSON files
        args: ["--autofix", "--no-sort-keys"]
        files: \.json$
        stages: [push]

      - id: mixed-line-ending
        name: Check line endings
        args: [--fix=lf]
        stages: [push]

      - id: check-case-conflict
        name: Check for case conflicts
        stages: [push]

      - id: check-executables-have-shebangs
        name: Check executable shebangs
        stages: [push]

      - id: check-shebang-scripts-are-executable
        name: Check shebang scripts are executable
        stages: [push]

      - id: forbid-submodules
        name: Check for submodules
        stages: [push]

  # Full Rubocop check
  - repo: local
    hooks:
      - id: local-rubocop-full
        name: Full Rubocop Check
        entry: bundle exec rubocop --force-exclusion --config .rubocop.yml --format json --fail-level warning --no-server
        language: system
        types: [ruby]
        files: \.(rb|rake|ru)$
        pass_filenames: true
        stages: [push]


  # Full ESLint check
  - repo: local
    hooks:
      - id: local-eslint-full
        name: Full ESLint Check
        entry: node_modules/.bin/eslint
        language: system
        types: [file]
        files: ^src/.*\.(js|mjs|ts|tsx|vue)$
        args: [
          '--max-warnings=0',
          '--cache'
        ]
        stages: [push]

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript Type Check
        entry: pnpm run type-check
        language: system
        pass_filenames: false
        types: [file]
        files: ^src/.*\.(ts|tsx|vue)$
        stages: [push]
